version: '3.8'

services:
  db:
    # --- CAMBIO: Se elimina 'image: mysql:8.0' y se añade la sección 'build' ---
    # En lugar de usar la imagen oficial de MySQL directamente, ahora le decimos a Docker
    # que construya una imagen personalizada usando el Dockerfile que crearemos.
    # Esto "incrusta" tu script init.sql directamente en la imagen,
    # solucionando todos los problemas de montaje de volúmenes en Jenkins.
    build:
      context: ..  # El contexto de construcción es la raíz del proyecto
      dockerfile: docker/mysql/Dockerfile # Ruta al nuevo Dockerfile para MySQL

    container_name: mysql-ecommerce-prod
    restart: always
    environment:
      MYSQL_DATABASE: 'ecommerce_lp2_prod'
      MYSQL_ROOT_PASSWORD: 'admin123'
      MYSQL_PASSWORD: 'admin123'
    volumes:
      # Este volumen para los datos de la base de datos se mantiene. Es correcto.
      - mysql_data:/var/lib/mysql

      # --- CAMBIO: Se elimina la línea del volumen del script SQL ---
      # Ya no es necesaria porque el script se COPIA dentro de la imagen durante la construcción.
      # - ${SQL_INIT_PATH:-../sql}:/docker-entrypoint-initdb.d/

    ports:
      - '3309:3306'
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-padmin123"]
      timeout: 20s
      retries: 10
      start_period: 40s
    networks:
      - backend

  # El servicio 'app' no necesita ningún cambio. Se queda exactamente igual.
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: product_app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8084:8084'
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db/ecommerce_lp2_prod?serverTimezone=America/Lima&useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: admin123
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
    restart: unless-stopped
    networks:
      - backend

volumes:
  mysql_data:

networks:
  backend:
    name: ecommerce_net